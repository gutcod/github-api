{"version":3,"sources":["components/NavBar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/githubReducer.js","context/github/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onKeyPress","event","key","clearUser","trim","hide","search","show","onChange","target","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","Fragment","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","following","public_repos","public_gists","style","width","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","CLIENT_ID","process","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6fe70add.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function NavBar() {\n  return (\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\n      <div className=\"navbar-brand\">Github Search</div>\n      <ul className=\"navbar-nav\">\n        <li className=\"navbar-item\">\n          <NavLink exact to=\"/\" className=\"nav-link\">\n            Home\n          </NavLink>\n        </li>\n        <li className=\"navbar-item\">\n          <NavLink to=\"/about\" className=\"nav-link\">\n            About\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n","import { createContext } from \"react\";\n\nexport const AlertContext = createContext();\n","import { createContext } from \"react\";\n\nexport const GithubContext = createContext();\n","import React, { useContext, useState } from \"react\";\nimport { AlertContext } from \"../context/alert/alertContext\";\nimport { GithubContext } from \"../context/github/githubContext\";\n\nexport const Search = () => {\n  const [value, setValue] = useState(\"\");\n  const alert = useContext(AlertContext);\n  const github = useContext(GithubContext);\n\n  const onSubmit = (event) => {\n    if (event.key !== \"Enter\") {\n      return;\n    }\n    github.clearUser();\n    if (value.trim()) {\n      alert.hide();\n      github.search(value.trim());\n    } else {\n      alert.show(\"put the input\");\n    }\n  };\n  return (\n    <div className=\"form-group\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"put nick\"\n        onKeyPress={onSubmit}\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Card = ({ user }) => {\n  return (\n    <div className=\"card\">\n      <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{user.login}</h5>\n        <Link to={\"/profile/\" + user.login} className=\"btn btn-primary\">\n          Open\n        </Link>\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment, useContext } from \"react\";\nimport { Search } from \"../components/Search\";\nimport { Card } from \"../components/Card\";\nimport { GithubContext } from \"../context/github/githubContext\";\n\nexport const Home = () => {\n  const { loading, users } = useContext(GithubContext);\n  return (\n    <Fragment>\n      <Search />\n      <div className=\"row\">\n        {loading ? (\n          <p className=\"text-center\">Loading...</p>\n        ) : (\n          users.map((user) => {\n            return (\n              <div className=\"col-sm-4 mb-4\" key={user.id}>\n                <Card user={user} />\n              </div>\n            );\n          })\n        )}\n      </div>\n    </Fragment>\n  );\n};\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">About</h1>\n        <p className=\"lead\">bla bla bla</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport const Repos = ({ repos }) => (\n  <React.Fragment>\n    {repos.map((repo) => (\n      <div className=\"card mb-3\" key={repo.id}>\n        <div className=\"card-body\">\n          <h5>\n            <a href={repo.html_url} rel=\"noopener noreferrer\" target=\"_blank\">\n              {repo.name}\n            </a>\n          </h5>\n        </div>\n      </div>\n    ))}\n  </React.Fragment>\n);\n","import React, { useContext, useEffect, Fragment } from \"react\";\nimport { GithubContext } from \"../context/github/githubContext\";\nimport { Link } from \"react-router-dom\";\nimport { Repos } from \"../components/Repos\";\n\nexport const Profile = ({ match }) => {\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\n  const urlName = match.params.name;\n\n  useEffect(() => {\n    getUser(urlName);\n    getRepos(urlName);\n    //eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <p className=\"text-center\">Loading...</p>;\n  }\n\n  const {\n    name,\n    company,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n  } = user;\n\n  return (\n    <Fragment>\n      <Link to=\"/\" className=\"btn btn-link\">\n        На главную\n      </Link>\n      <div className=\"card mb-4\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <div className=\"col-sm-3 text-center\">\n              <img src={avatar_url} alt={name} style={{ width: \"150px\" }} />\n              <h1>{name}</h1>\n              {location && <p>Location: {location}</p>}\n            </div>\n            <div className=\"col\">\n              {bio && (\n                <Fragment>\n                  <h3>BIO</h3>\n                  <p>{bio}</p>\n                </Fragment>\n              )}\n              <a\n                href={html_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"btn btn-dark\"\n              >\n                Open Profile\n              </a>\n              <ul>\n                {login && (\n                  <li>\n                    <strong>Username: </strong> {login}\n                  </li>\n                )}\n\n                {company && (\n                  <li>\n                    <strong>Company: </strong> {company}\n                  </li>\n                )}\n\n                {blog && (\n                  <li>\n                    <strong>Website: </strong> {blog}\n                  </li>\n                )}\n              </ul>\n\n              <div className=\"badge badge-primary\">Followers: {followers}</div>\n              <div className=\"badge badge-success\">Following: {following}</div>\n              <div className=\"badge badge-info\">Register: {public_repos}</div>\n              <div className=\"badge badge-dark\">Gists: {public_gists}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Repos repos={repos} />\n    </Fragment>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { AlertContext } from \"../context/alert/alertContext\";\n\nexport const Alert = () => {\n  const { alert, hide } = useContext(AlertContext);\n\n  if (!alert) return null;\n\n  return (\n    <div\n      className={`alert alert-${alert.type || \"secondary\"} alert-dismissible`}\n      role=\"alert\"\n    >\n      {alert.text}\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n};\n","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\n\nconst handlers = {\n  [SHOW_ALERT]: (state, action) => action.payload,\n  [HIDE_ALERT]: () => null,\n  DEFAULT: (state) => state,\n};\n\nexport const alertReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action);\n};\n","export const SHOW_ALERT = \"SHOW_ALERT\";\nexport const HIDE_ALERT = \"HIDE_ALERT\";\nexport const CLEAR_USERS = \"CLEAR_USERS\";\nexport const GET_REPOS = \"GET_REPOS\";\nexport const GET_USER = \"GET_USER\";\nexport const SEARCH_USERS = \"SEARCH_USERS\";\nexport const SET_LOADING = \"SET_LOADING\";\n","import React, { useReducer } from \"react\";\nimport { AlertContext } from \"./alertContext\";\nimport { alertReducer } from \"./alertReducer\";\nimport { HIDE_ALERT, SHOW_ALERT } from \"../types\";\n\nexport const AlertState = ({ children }) => {\n  const [state, dispatch] = useReducer(alertReducer, null);\n\n  const hide = () => dispatch({ type: HIDE_ALERT });\n\n  const show = (text, type = \"secondary\") => {\n    dispatch({\n      type: SHOW_ALERT,\n      payload: { type, text },\n    });\n  };\n\n  return (\n    <AlertContext.Provider\n      value={{\n        hide,\n        show,\n        alert: state,\n      }}\n    >\n      {children}\n    </AlertContext.Provider>\n  );\n};\n","import {\n  SEARCH_USERS,\n  GET_REPOS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n} from \"../types\";\n\nconst handlers = {\n  [SEARCH_USERS]: (state, { payload }) => ({\n    ...state,\n    users: payload,\n    loading: false,\n  }),\n  [GET_REPOS]: (state, { payload }) => ({\n    ...state,\n    repos: payload,\n    loading: false,\n  }),\n  [GET_USER]: (state, { payload }) => ({\n    ...state,\n    user: payload,\n    loading: false,\n  }),\n  [SET_LOADING]: (state) => ({ ...state, loading: true }),\n  [CLEAR_USERS]: (state) => ({ ...state, users: [] }),\n  DEFAULT: (state) => state,\n};\n\nexport const githubReducer = (state, action) => {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action);\n};\n","import React, { useReducer } from \"react\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\nimport axios from \"axios\";\n\nimport {\n  SEARCH_USERS,\n  GET_USER,\n  GET_REPOS,\n  CLEAR_USERS,\n  SET_LOADING,\n} from \"../types\";\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\nconst withCreds = (url) => {\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\n};\n\nexport const GithubState = ({ children }) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: [],\n  };\n\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const search = async (value) => {\n    setLoading();\n    const response = await axios.get(\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\n    );\n    dispatch({ type: SEARCH_USERS, payload: response.data.items });\n  };\n\n  const getUser = async (name) => {\n    setLoading();\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}?`)\n    );\n    dispatch({ type: GET_USER, payload: response.data });\n  };\n\n  const getRepos = async (name) => {\n    setLoading();\n    const response = await axios.get(\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=12&`)\n    );\n    dispatch({ type: GET_REPOS, payload: response.data });\n  };\n  const clearUser = async () => {\n    dispatch({ type: CLEAR_USERS });\n  };\n  const setLoading = async () => {\n    dispatch({ type: SET_LOADING });\n  };\n  const { user, users, repos, loading } = state;\n\n  return (\n    <GithubContext.Provider\n      value={{\n        search,\n        getUser,\n        getRepos,\n        clearUser,\n        setLoading,\n        user,\n        users,\n        repos,\n        loading,\n      }}\n    >\n      {children}\n    </GithubContext.Provider>\n  );\n};\n","import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Home } from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport { Profile } from \"./pages/Profile\";\nimport { Alert } from \"./components/Alert\";\nimport { AlertState } from \"./context/alert/AlertState\";\nimport { GithubState } from \"./context/github/GithubState\";\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <NavBar />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: \"alert\" }} />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/profile/:name\" component={Profile} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}